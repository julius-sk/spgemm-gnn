Current process ID: 34494

Parameters:
CACHE_SIZE_RATIO=0.3
CACHE_STRATEGY=static-outd
DATA_PATH=./data/
DATASET=ogbn-products
DROPOUT=0.5
ENABLE_LOOKAHEAD=False
EPOCHS=500
EVALUATE=None
GPU=0
HIDDEN_DIM=256
HIDDEN_LAYERS=3
MAXK=32
MODEL=sage
NONLINEAR=maxk
NORM=True
PATH=experiment/ogbn-products_seed97/sage_max32_static-outd_0.3
PLOT_PATH=experiment/ogbn-products_seed97/sage_max32_static-outd_0.3/plots
SEED=97
SELFLOOP=False
W_LR=0.003
W_WEIGHT_DECAY=0

Training with DGL built-in GraphConv module.
Using cache strategy: static-outd with ratio: 0.3
Training...
Input features shape: torch.Size([2449029, 100])
Training timing started - measuring forward pass aggregation only
Traceback (most recent call last):
  File "/home/labuser/shiju/MaxK-GNN/maxk_gnn_dgl.py", line 705, in <module>
    train(g, features, labels, masks, model, config, logger, writer)
  File "/home/labuser/shiju/MaxK-GNN/maxk_gnn_dgl.py", line 498, in train
    logits = model(g, features)
  File "/home/labuser/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/labuser/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/labuser/shiju/MaxK-GNN/utils/models.py", line 163, in forward
    x = self.layers[i](g, x)
  File "/home/labuser/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/labuser/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1561, in _call_impl
    result = forward_call(*args, **kwargs)
  File "/home/labuser/shiju/MaxK-GNN/utils/models.py", line 44, in forward
    feat_data = self.cache_strategy.get_features(feat)
  File "/home/labuser/shiju/MaxK-GNN/maxk_gnn_dgl.py", line 292, in get_features
    features = self._get_features_batched(node_indices)
  File "/home/labuser/shiju/MaxK-GNN/maxk_gnn_dgl.py", line 303, in _get_features_batched
    result = torch.zeros((num_nodes, self.features.shape[1]), 
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 233.56 GiB. GPU 0 has a total capacity of 79.25 GiB of which 67.52 GiB is free. Including non-PyTorch memory, this process has 11.73 GiB memory in use. Of the allocated memory 7.95 GiB is allocated by PyTorch, and 8.30 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
